操作系统为用户程序提供抽象接口
对下层的资源进行管理

程序计数器
堆栈指针
程序状态字
流水
超标量


系统调用：用户程序获得操作系统服务
TRAP

多线程和多核
多线程、超线程
线程：轻量级进程，线程切换是纳秒数量级
多核：每个核有自己的缓存
GPU

从上到下：寄存器、cache、主存、磁盘
L1缓存，L2缓存
RAM、ROM
EEPROM，可擦除可编程ROM，闪存
CMOS


磁盘：机械装置
同心圆
磁道，半径相同的环形区域
柱面：给定臂位置的磁道结合起来形成一个柱面
每个磁道划分成若干扇区，512B
寻道时间和旋转时间

固态硬盘


虚拟内存机制
存储管理单元MMU
多道程序中，从一个程序切换到另一个程序称为上下文切换
MMU的切换很慢


I/O设备
ATA：高级技术附件
SATA：串行高级技术附件
设备驱动程序

设备驱动程序的装入有三个途径

每个设备都有少量的通信寄存器
设备寄存器构成了I/O端口空间

方式一：映射到操作系统地址空间，方式二：IN/OUT指令
循环查询（忙等待）
中断方式
DMA方式，内存直接和控制器进行数据交换，无需CPU干预

总线
PCIE：Peripheral Component Interconnect Express 串行总线架构
PCI：Peripheral Component Interconnect 并行总线
USB：Universal Serial Bus
SCSI：Small Computer System Interface

启动计算机
双亲版，母版，称为基本输入输出系统Basic Input Output System，BIOS程序
以前是保存在ROM中的，现在是保存在闪速RAM，非易失性的，可以通过操作系统进行更新
计算机启动，BIOS开始运行，检查RAM数量，检查键盘和其它设备是否已安装并正常响应。接着，它开始扫描PCIE和PCI总线并扫描连接在上面的所有设备，即插即用设备也被记录先来
然后，BIOS通过尝试存储在CMOS存储器中的设备清单决定启动设备，这个清单用户可以在BIOS配置程序中修改。
硬盘启动，则首先会读取启动设备的第一个扇区到内存中，这个扇区中称为MBR，保存boot程序，分区表和签名，


操作系统分类
大型机操作系统，1000个磁盘，几百万GB数据
	三类服务：批处理、事务处理、分时
	OS/390，逐渐被Linux这类UNIX变体替代
服务器操作系统：在服务器上运行
多处理器操作系统：Windows、Linux
个人计算机操作系统：Linux、FreeBSD
掌上机操作系统：PDA，Android、IOS
嵌入式操作系统：Linux，QNX，VxWorks
传感器节点操作系统
实时操作系统：硬实时（绝对可靠保证）、软实时
智能卡操作系统：包含CPU芯片的信用卡

进程：正在执行的程序
	地址空间、资源集合
	进程表
	进程地址空间、进程表项
命令解释器
子进程、进程间通信
UID用户、GID组
超级用户、管理员
虚拟内存技术

文件和文件系统
目录：根目录、工作目录、文件描述符
UNIX文件系统挂载，树形结构
I/O设备也当作文件处理：块特殊文件和字符特殊文件
管道：需文件，连接两个进程
输入/输出
保护
shell

过时的概念、过时的技术，技术的变化会导致某种思想的复活，
大型内存
保护硬件：PDP-1、PDP-8、PDP-11、8080、80286、80386
硬盘
虚拟内存

系统调用：陷阱、系统调用
系统调用read的过程：调用程序首先把参数压进堆栈，接下来对库过程的实际调用
执行一个TRAP指令，将用户态切换到内核态，跳转到一个固定的地址，或者给定了内存表格中的索引，表格中包含跳转地址

数据段下上增长，堆栈段向下增长
文件read、write、lseek
mkdir、rmdir、chdir改变当前工作目录、chmod系统调用改变文件模式

Win32 API中的调用并不全是系统调用

C语言与操作系统
头文件

大型编程项目：
.c被C编译器编译成目标文件，目标文件的后缀为.o文件，含有目标机器的二进制代码，随后它们可以直接在CPU上运行
C编译的第一道称为C预处理，在它读入每个.c文件
make
当所有的.o文件就绪，则这些文件被传递给linker程序，将其组合成一个可执行的二进制文件，在linker完成后，可以得到一个可执行程序，在UNIX系统中，称为a.out文件。
运行模型
操作系统由若干段组成，代码段、数据段和堆栈段，代码段通常是不可修改的。数据段开始时有一定大小，并用确定的值初始化。堆栈初始化为空，但是随着函数的调用和返回，堆栈的在增长和缩小。



第二章
进程和线程
进程：正在运行动程序的抽象
伪并行，多处理器系统

进程模型
进程拥有自己的虚拟CPU、PC、堆栈数据等段
每个核一次只能运行一个进程，多个进程之间在快速的来回切换

进程的创建
四种情况会创建进程：系统初始化、正在运行的程序执行了创建进程的系统调用、用户请求创建新的进程、批处理作业的初始化
后台进程、前台进程、守护进程
fork可以创建进程，execve运行新程序
父进程和子进程有不同的地址空间，同一个变量在对其它进程不可见。

进程的终止
四种情况：正常退出、出错推出、严重错误、被杀死

进程的层次结构
一个进程最多只有一个父进程，但可以有多个子进程

进程状态
3种状态：运行态、就绪态、阻塞态

进程实现
进程表，process table，进程控制块
包括程序计数器、堆栈指针，内存分配情况，打开文件的状态，账号和调度信息
中断向量，在内存底部的位置，包含中断服务程序的入口地址，所有的中断都从保存寄存器开始

多道程序的设计模型
p为每个进程等待I/O的概率，CPU利用率=1-p^n
增加道数可以提高CPU利用率

线程
并行的线程共享同一个地址空间和所有可用数据
轻量级，线程切换比进程更快，易创建和撤销。
允许线程的重叠进行
多CPU允许多线程真正并行的可能
web服务器中的监听线程与serverSocket

多个线程共享同样的全局变量，可以访问进程地址空间的每一个内存地址，一个线程可以读、写甚至清除另一个线程的堆栈和数据，线程间是没有保护的
原因是：不可能也没必要
共享打开文件集、子进程、定时器、相关信号
但是每个线程有自己的堆栈
线程可以创建新的线程，线程工作完成后可以调用库过程退出，最终消失，不可调度。
在线程系统中，可以通过调用一个过程，等待一个特定的线程退出，这个过程将阻塞直到那个特定线程退出。
线程可以自动放弃CPU而让另一个线程运行，

用户空间中实现线程
方法一：所有线程包都在用户空间中，内核对线程一无所知。这种方式可以在不支持线程的操作系统中实现。可以通过库函数实现。
进程中需要有专用的线程表
在线程完成时，它可以把线程信息保存在线程表，进而通过进程调度程序调度另一个线程，不需要通过内核。不需要上下文切换，切换速度块。
允许有自己的线程调度算法。
用户级线程：一个线程阻塞不会影响其它线程
内核级多线程：回收机制，当某个线程被撤销时，被标志为不可运行，但是其内核数据没有受到影响
混合实现
总之，给已有的系统引入线程需要进行实质性的重新设计

进程间通信
竞争条件是形成死锁的必要条件
临界区：对共享内存访问的区域，互斥
1、任何两个进程不能同时处于临界区，2、不应对CPU的速度和数量做假设，3、临界区外运行的程序不能阻塞其它进程，4、不能使进程无限期等待进入临界区

在进入临界区后屏蔽中断，离开后解除屏蔽
锁变量：共享锁
严格轮换法：自旋锁，等待时间
Peterson：用turn表示当前正在拥有共享空间的线程
TSL指令：执行TSL指令的CPU将锁住内存总线，可用XCHG代替
TSL REGISTER,LOCK
睡眠与唤醒

生产者与消费者问题，一个在缓冲区中取数据，一个往缓冲区写数据，用count
信号量
二元信号量
互斥量

管程：是一种抽象的概念
管程比信号量更容易保证并行编程的正确性，缺点是需要编译器识别并对互斥做出安排。
消息传递

调度算法
第一：父进程和子进程，第二、进程退出时选择就绪进程，第三、进程阻塞，选择其它进程，第四、I/O中断发生时，做出调度决策
抢占式调度算法：需要时钟中断
调度算法分类：批处理、交互式、实时
吞吐量：单位时间完成的作业数
周转时间：作业提交到该作业完成时需要的时间
最小响应时间
均衡性

先来先服务：
最短作业优先：假设所有进程能够立即执行
最短剩余时间优先：剩余时间怎么判断
轮转调度：时间片的设置
优先级调度：饥饿现象
多级队列：
最短进程优先：预测运行时间
保证调度：保证吗明确性能，保证各个进程平等，记录进程运行时间
彩票调度：随机选择
公平分享调度：保证各个用户的公平
线程调度
IPC问题
哲学家就餐同步问题：等待随机的时间取左边的叉子




内存管理
分层次存储器系统
存储管理器
基址寄存器和界限寄存器：分段技术

地址空间：存储器抽象
动态重定位

交换技术
把不用进程挂起到磁盘中，需要时交换到内存中
空闲内存管理
使用位图的存储管理：缺点在位图可能跨越字的边界
链表方式的存储管理：首次适配、下次适配、最佳适配、最差适配

虚拟内存技术


虚拟内存：分页技术，段页式内存管理
程序大于内存
虚拟地址：逻辑地址和物理地址
虚拟地址空间、内存管理单元，MMU
物理内存按固定大小被划分成页面，对应到物理内存中称为页框，frame
现在常用的位4KB
页表和页表项
保护、修改（脏位）、访问

TLB转换检测缓冲区，相连存储器，快表
软失效：页面不在TLB中，但是在内存中
硬失效：页面不在TLB中，也不在内存中，需要从磁盘I/O
次要缺页错误、严重缺页错误

针对大内存的页表
多级页表，二级页表、三级页表
页目录指针表、4级页表
倒排页表：表项记录了哪个进程对应于该页框

页面置换算法
最优先页面置换算法：规定应该置换标记最大的页面，一个页在800万条指令内不会被使用，另一个600万条指令
最近未使用页面置换算法：未访问未修改，未访问已修改，已访问未修改，已访问未修改
先进先出页面置换算法：
第二次机会页面置换算法：检查最老的页面R位，如果为0，则可以立即置换掉，否则将R边为0，并将该页面放到表尾
时钟页面置换算法：找到下一个R位为0的页面，替换掉，并让指针前移
最近最少使用：维护页面链表，更新使用次数。硬件计数器C，替换页面中计数器值最小的页面
软件模拟LRU：计数器加上R值
工作集页面置换算法：一个进程当前正在使用的页面集合称为它的工作集。可以跟踪进程工作集，预先调页。最近k次内内存访问使用过的页面集合。过去10ms内内存访问用到的页面集合。当前时间减去上次使用的时间，称为生存时间，如果生存时间大于t，则置换。
工作集时钟页面置换算法：R位为1跳过，则改为0，查找下一个，R位为0，生存时间如果大于t，且该页干净

局部分配策略与全局分配策略
负载控制
页面大小
分离的指令空间和数据空间
共享页面、共享库
内存映射文件
清楚策略
虚拟内存接口





分段：目的是为了程序和数据逻辑上的亲，并且有利于数据共享和保护
分段和分页本质上是不同的。
一个段是一个逻辑实体


LDT和GDT
目录、页面、偏移量

在64位CPU中，分段机制已经被认为是过时的，并且不再被支持


文件系统
文件
FAT-16，FAT-32，exFAT
NTFS
文件结构、文件类型
普通文件和目录
UNIX字符特殊文件和块文件
文件访问：顺序访问、随机访问
文件属性
文件操作：create、delete、open、close、read、write、append、seek、get attributes、set attributes、rename
目录：一级目录系统、层次目录系统
路径名：相对路径和绝对路径
MBR：主引导记录，磁盘的0号扇区
文件实现
连续分配、链表分配、采用内粗那种的表进行链表分配
i节点：文件属性和文件块地址，
目录的实现

虚拟文件系统
将多种文件系统整合到一个统一的结构
磁盘空间管理
块大小
记录空闲块
文件系统的一致性

文件系统性能
块高速缓存、缓冲区技术、提前读、减少磁盘臂运动
磁盘碎片整理



输入/输出
I/O硬件：块设备、字符设备

错误校验码ECC
视频RAM，数据缓冲区
I/O端口，8位或者16位的整数，IN/OUT指令
将所有的控制寄存器映射到内存空间，内存映射I/O
x86采用这个体系结构，0-64K-1的I/O端口，640K到1M-1内存地址为设备数据缓冲区

内存映射I/O增加了复杂性

字模式中，CPU想使用总线，必须等待I/O完成，这一机制称为周期窃取
块模式中，DMA控制器通知设备获得总线，发起数据传输，然后释放总线，这一模式称为突发模式，如果长时传送，将阻塞CPU和其它设备。
飞跃模式

中断：中断向量
中断向量是一个表格的索引，在表格对应位置，包含中断服务程序的入口地址
中断服务程序开始前，必须保存信息，包括程序计数器、寄存器等

在指令执行间期，两条指令之间发生中断
精确中断和不精确中断，

错误处理：尽可能在硬件层面处理

同不传输和异步传输

三种I/O方式，程序控制I/O，中断I/O，DMAI/O

硬件->中断处理程序->设备驱动程序->与设备无关的操作系统软件->用户程序

中断过程

双缓冲、循环缓冲区
错误

盘
磁盘
扇区：同一个柱面的若干磁道，磁道数与垂直堆叠的磁头个数相同，磁道被分成若干扇区，
IDE和SATA
逻辑块寻址
RAID技术，RAID0技术
RAID1，复制了所有磁盘
RAID2：在字节基础上，旋转同步，有每个数据有一个奇偶校验位
RAID3：
RAID4：将奇偶校验写在额外的磁盘中
RAID5：每个磁盘都有一块奇偶校验，均匀分布
RAID6：跨磁盘具有两个奇偶校验块

磁盘格式化
分区
主引导记录MBR
GPT GUID分区表

磁盘臂调度算法：寻道时间、旋转延迟、数据传输时间
电梯算法

时钟

死锁
可抢占资源
不可抢占资源
死锁发生的四个必要条件：互斥等待，占有和等待条件、不可抢占条件、环路等待。





